name: Build & deploy Webapp

env:
  ARTIFACT_NAME: csye6225-webapp-${{ github.run_number }}.zip
  CODEDEPLOY_APPLICATIONNAME: codedeploymentApp
  CODEDEPLOY_APPLICATION_DEPLOYMENT_GROUP_NAME: deploymentGroup
  AWS_REGION: us-east-1

# it'll be push
on:
  pull_request:
    branches: [ master ]


jobs:
  ci_cd:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: build with maven
        run: |
          echo "${{ env.ARTIFACT_NAME}}"
          pwd
          ls
          mvn package
          pwd
          ls -al
          ls -al target/

      - name:  Deployment artifacts
        run: |
          mkdir codedeploy_artifacts
          zip -r ${{env.ARTIFACT_NAME}} target/cloudcomputing-0.0.1-SNAPSHOT.war scripts/*.sh appspec.yml
          pwd
          ls -al
          mv ${{env.ARTIFACT_NAME}} codedeploy_artifacts/
          ls -al
          pwd
          cd codedeploy_artifacts
          pwd
          ls -al
          cd ..
          pwd
          ls -al
          sudo chmod 777 codedeploy_artifacts


      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: AKIAYTPL2ASESJ73R5OP
          aws-secret-access-key: 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
          aws-region: ${{ env.AWS_REGION }}
      - name: copy artifacts to s3
        run: |
          aws s3 sync ./codedeploy_artifacts s3://codedeploy.dhavalpandya.me

      - name: codedeploy api call
        run: |
          versionId=$(aws s3api head-object --bucket codedeploy.dhavalpandya.me --key ${{ env.ARTIFACT_NAME }} --output json --query 'VersionId')
          echo $versionId
          output=$(aws deploy create-deployment --application-name ${{ env.CODEDEPLOY_APPLICATIONNAME }} --deployment-group-name deploymentGroup --output json --s3-location bucket=codedeploy.dhavalpandya.me,key=${{ env.ARTIFACT_NAME }},version=${versionId} --region ${{ env.AWS_REGION }})
          echo $output
          dId=$(echo $output | jq -r '.deploymentId')
          aws deploy wait deployment-success --deployment-id $dId




